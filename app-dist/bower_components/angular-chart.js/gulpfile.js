!function(){"use strict";function bump(level){return function(){return gulp.src(["./package.json","./bower.json"]).pipe(bumper({type:level})).pipe(gulp.dest("./"))}}function version(){return JSON.parse(fs.readFileSync("package.json","utf8")).version}var gulp=require("gulp"),less=require("gulp-less"),sourcemaps=require("gulp-sourcemaps"),uglify=require("gulp-uglify"),csso=require("gulp-csso"),jshint=require("gulp-jshint"),stylish=require("jshint-stylish"),jscs=require("gulp-jscs"),mocha=require("gulp-spawn-mocha"),tar=require("gulp-tar"),gzip=require("gulp-gzip"),bumper=require("gulp-bump"),git=require("gulp-git"),shell=require("gulp-shell"),rename=require("gulp-rename"),fs=require("fs"),sequence=require("gulp-sequence"),ngAnnotate=require("gulp-ng-annotate");gulp.task("less",function(){return gulp.src("./*.less").pipe(sourcemaps.init()).pipe(less()).pipe(csso()).pipe(sourcemaps.write("./")).pipe(gulp.dest("./dist"))}),gulp.task("lint",function(){return gulp.src("**/*.js").pipe(jshint()).pipe(jshint.reporter(stylish))}),gulp.task("style",function(){return gulp.src("**/*.js").pipe(jscs())}),gulp.task("unit",shell.task([" ./node_modules/mocha-phantomjs/bin/mocha-phantomjs -R spec test/index.html "])),gulp.task("integration",function(){return gulp.src("test/test.integration.js",{read:!1}).pipe(mocha({reporter:"list",timeout:1e4,require:"test/support/setup.js"}))}),gulp.task("bump-patch",bump("patch")),gulp.task("bump-minor",bump("minor")),gulp.task("bump-major",bump("major")),gulp.task("bower",function(){return gulp.src("./angular-chart.js").pipe(ngAnnotate({single_quotes:!0})).pipe(gulp.dest("./dist"))}),gulp.task("js",["lint","style","bower"],function(){return gulp.src("./angular-chart.js").pipe(rename("angular-chart.min.js")).pipe(ngAnnotate({single_quotes:!0})).pipe(sourcemaps.init()).pipe(uglify()).pipe(sourcemaps.write("./")).pipe(gulp.dest("./dist"))}),gulp.task("build",function(){return gulp.src(["dist/*","!./dist/*.tar.gz"]).pipe(tar("angular-chart.js.tar")).pipe(gzip({gzipOptions:{level:9}})).pipe(gulp.dest("dist/"))}),gulp.task("update",function(cb){fs.readFile("./examples/charts.template.html","utf8",function(err,file){return err?cb(err):(file=file.replace("<!-- version -->",version()),void fs.writeFile("./examples/charts.html",file,cb))})}),gulp.task("git-commit",function(){var v=version();gulp.src(["./dist/*","./package.json","./bower.json","./examples/charts.html"]).pipe(git.add()).pipe(git.commit(v))}),gulp.task("git-push",function(cb){var v=version();git.push("origin","master",function(err){return err?cb(err):void git.tag(v,v,function(err){return err?cb(err):void git.push("origin","master",{args:"--tags"},cb)})})}),gulp.task("npm",shell.task(["npm publish"])),gulp.task("watch",function(){return gulp.watch("./*.js",["js"]),gulp.watch("./*.less",["less"]),!0}),gulp.task("default",sequence("check",["less","js"],"build")),gulp.task("test",sequence("unit","integration")),gulp.task("check",sequence(["lint","style"],"test")),gulp.task("deploy-patch",sequence("default","bump-patch","update","git-commit","git-push","npm")),gulp.task("deploy-minor",sequence("default","bump-minor","update","git-commit","git-push","npm")),gulp.task("deploy-major",sequence("default","bump-patch","update","git-commit","git-push","npm"))}();