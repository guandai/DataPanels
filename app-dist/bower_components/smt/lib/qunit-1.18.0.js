/*!
 * QUnit 1.18.0
 * http://qunitjs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2015-04-03T10:23Z
 */

/*
 * This file is a modified version of google-diff-match-patch's JavaScript implementation
 * (https://code.google.com/p/google-diff-match-patch/source/browse/trunk/javascript/diff_match_patch_uncompressed.js),
 * modifications are licensed as more fully set forth in LICENSE.txt.
 *
 * The original source of google-diff-match-patch is attributable and licensed as follows:
 *
 * Copyright 2006 Google Inc.
 * http://code.google.com/p/google-diff-match-patch/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * More Info:
 *  https://code.google.com/p/google-diff-match-patch/
 *
 * Usage: QUnit.diff(expected, actual)
 *
 * QUnit.diff( "the quick brown fox jumped over", "the quick fox jumps over" ) === "the  quick <del>brown </del> fox jump<ins>s</ins><del>ed</del over"
 */

!function(window){function done(){var runtime,passed;config.autorun=!0,config.previousModule&&runLoggingCallbacks("moduleDone",{name:config.previousModule.name,tests:config.previousModule.tests,failed:config.moduleStats.bad,passed:config.moduleStats.all-config.moduleStats.bad,total:config.moduleStats.all,runtime:now()-config.moduleStats.started}),delete config.previousModule,runtime=now()-config.started,passed=config.stats.all-config.stats.bad,runLoggingCallbacks("done",{failed:config.stats.bad,passed:passed,total:config.stats.all,runtime:runtime})}function extractStacktrace(e,offset){offset=void 0===offset?4:offset;var stack,include,i;if(e.stack){if(stack=e.stack.split("\n"),/^error$/i.test(stack[0])&&stack.shift(),fileName){for(include=[],i=offset;i<stack.length&&-1===stack[i].indexOf(fileName);i++)include.push(stack[i]);if(include.length)return include.join("\n")}return stack[offset]}if(e.sourceURL){if(/qunit.js$/.test(e.sourceURL))return;return e.sourceURL+":"+e.line}}function sourceFromStacktrace(offset){var error=new Error;if(!error.stack)try{throw error}catch(err){error=err}return extractStacktrace(error,offset)}function synchronize(callback,last){if("array"!==QUnit.objectType(callback))config.queue.push(callback),config.autorun&&!config.blocking&&process(last);else for(;callback.length;)synchronize(callback.shift())}function process(last){function next(){process(last)}var start=now();for(config.depth=(config.depth||0)+1;config.queue.length&&!config.blocking;){if(!(!defined.setTimeout||config.updateRate<=0||now()-start<config.updateRate)){setTimeout(next,13);break}config.current&&(config.current.usedAsync=!1),config.queue.shift()()}config.depth--,!last||config.blocking||config.queue.length||0!==config.depth||done()}function begin(){var i,l,modulesLog=[];if(!config.started){for(config.started=now(),verifyLoggingCallbacks(),""===config.modules[0].name&&0===config.modules[0].tests.length&&config.modules.shift(),i=0,l=config.modules.length;l>i;i++)modulesLog.push({name:config.modules[i].name,tests:config.modules[i].tests});runLoggingCallbacks("begin",{totalTests:Test.count,modules:modulesLog})}config.blocking=!1,process(!0)}function resumeProcessing(){runStarted=!0,defined.setTimeout?setTimeout(function(){config.current&&config.current.semaphore>0||(config.timeout&&clearTimeout(config.timeout),begin())},13):begin()}function pauseProcessing(){config.blocking=!0,config.testTimeout&&defined.setTimeout&&(clearTimeout(config.timeout),config.timeout=setTimeout(function(){if(!config.current)throw new Error("Test timed out");config.current.semaphore=0,QUnit.pushFailure("Test timed out",sourceFromStacktrace(2)),resumeProcessing()},config.testTimeout))}function saveGlobal(){if(config.pollution=[],config.noglobals)for(var key in window)if(hasOwn.call(window,key)){if(/^qunit-test-output/.test(key))continue;config.pollution.push(key)}}function checkPollution(){var newGlobals,deletedGlobals,old=config.pollution;saveGlobal(),newGlobals=diff(config.pollution,old),newGlobals.length>0&&QUnit.pushFailure("Introduced global variable(s): "+newGlobals.join(", ")),deletedGlobals=diff(old,config.pollution),deletedGlobals.length>0&&QUnit.pushFailure("Deleted global variable(s): "+deletedGlobals.join(", "))}function diff(a,b){var i,j,result=a.slice();for(i=0;i<result.length;i++)for(j=0;j<b.length;j++)if(result[i]===b[j]){result.splice(i,1),i--;break}return result}function extend(a,b,undefOnly){for(var prop in b)hasOwn.call(b,prop)&&("constructor"!==prop||a!==window)&&(void 0===b[prop]?delete a[prop]:undefOnly&&"undefined"!=typeof a[prop]||(a[prop]=b[prop]));return a}function runLoggingCallbacks(key,args){var i,l,callbacks;for(callbacks=config.callbacks[key],i=0,l=callbacks.length;l>i;i++)callbacks[i](args)}function verifyLoggingCallbacks(){var loggingCallback,userCallback;for(loggingCallback in loggingCallbacks)QUnit[loggingCallback]!==loggingCallbacks[loggingCallback]&&(userCallback=QUnit[loggingCallback],QUnit[loggingCallback]=loggingCallbacks[loggingCallback],QUnit[loggingCallback](userCallback),window.console&&window.console.warn&&window.console.warn("QUnit."+loggingCallback+" was replaced with a new value.\nPlease, check out the documentation on how to apply logging callbacks.\nReference: http://api.qunitjs.com/category/callbacks/"))}function inArray(elem,array){if(array.indexOf)return array.indexOf(elem);for(var i=0,length=array.length;length>i;i++)if(array[i]===elem)return i;return-1}function Test(settings){var i,l;for(++Test.count,extend(this,settings),this.assertions=[],this.semaphore=0,this.usedAsync=!1,this.module=config.currentModule,this.stack=sourceFromStacktrace(3),i=0,l=this.module.tests;i<l.length;i++)this.module.tests[i].name===this.testName&&(this.testName+=" ");this.testId=generateHash(this.module.name,this.testName),this.module.tests.push({name:this.testName,testId:this.testId}),settings.skip?(this.callback=function(){},this.async=!1,this.expected=0):this.assert=new Assert(this)}function generateHash(module,testName){for(var hex,i=0,hash=0,str=module+""+testName,len=str.length;len>i;i++)hash=(hash<<5)-hash+str.charCodeAt(i),hash|=0;return hex=(4294967296+hash).toString(16),hex.length<8&&(hex="0000000"+hex),hex.slice(-8)}function Assert(testContext){this.test=testContext}var QUnit,config,onErrorFnPrev,loggingCallbacks={},fileName=(sourceFromStacktrace(0)||"").replace(/(:\d+)+\)?/,"").replace(/.+\//,""),toString=Object.prototype.toString,hasOwn=Object.prototype.hasOwnProperty,Date=window.Date,now=Date.now||function(){return(new Date).getTime()},globalStartCalled=!1,runStarted=!1,setTimeout=window.setTimeout,clearTimeout=window.clearTimeout,defined={document:void 0!==window.document,setTimeout:void 0!==window.setTimeout,sessionStorage:function(){var x="qunit-test-string";try{return sessionStorage.setItem(x,x),sessionStorage.removeItem(x),!0}catch(e){return!1}}()},errorString=function(error){var name,message,errorString=error.toString();return"[object"===errorString.substring(0,7)?(name=error.name?error.name.toString():"Error",message=error.message?error.message.toString():"",name&&message?name+": "+message:name?name:message?message:"Error"):errorString},objectValues=function(obj){var key,val,vals=QUnit.is("array",obj)?[]:{};for(key in obj)hasOwn.call(obj,key)&&(val=obj[key],vals[key]=val===Object(val)?objectValues(val):val);return vals};QUnit={},config={queue:[],blocking:!0,reorder:!0,altertitle:!0,scrolltop:!0,requireExpects:!1,maxDepth:5,urlConfig:[{id:"hidepassed",label:"Hide passed tests",tooltip:"Only show tests and assertions that fail. Stored as query-strings."},{id:"noglobals",label:"Check for Globals",tooltip:"Enabling this will test if any test introduces new properties on the `window` object. Stored as query-strings."},{id:"notrycatch",label:"No try-catch",tooltip:"Enabling this will run tests outside of a try-catch block. Makes debugging exceptions in IE reasonable. Stored as query-strings."}],modules:[],currentModule:{name:"",tests:[]},callbacks:{}},config.modules.push(config.currentModule),function(){var i,current,location=window.location||{search:"",protocol:"file:"},params=location.search.slice(1).split("&"),length=params.length,urlParams={};if(params[0])for(i=0;length>i;i++)current=params[i].split("="),current[0]=decodeURIComponent(current[0]),current[1]=current[1]?decodeURIComponent(current[1]):!0,urlParams[current[0]]=urlParams[current[0]]?[].concat(urlParams[current[0]],current[1]):current[1];if(urlParams.filter===!0&&delete urlParams.filter,QUnit.urlParams=urlParams,config.filter=urlParams.filter,urlParams.maxDepth&&(config.maxDepth=-1===parseInt(urlParams.maxDepth,10)?Number.POSITIVE_INFINITY:urlParams.maxDepth),config.testId=[],urlParams.testId)for(urlParams.testId=decodeURIComponent(urlParams.testId).split(","),i=0;i<urlParams.testId.length;i++)config.testId.push(urlParams.testId[i]);QUnit.isLocal="file:"===location.protocol,QUnit.version="1.18.0"}(),extend(QUnit,{module:function(name,testEnvironment){var currentModule={name:name,testEnvironment:testEnvironment,tests:[]};testEnvironment&&testEnvironment.setup&&(testEnvironment.beforeEach=testEnvironment.setup,delete testEnvironment.setup),testEnvironment&&testEnvironment.teardown&&(testEnvironment.afterEach=testEnvironment.teardown,delete testEnvironment.teardown),config.modules.push(currentModule),config.currentModule=currentModule},asyncTest:function(testName,expected,callback){2===arguments.length&&(callback=expected,expected=null),QUnit.test(testName,expected,callback,!0)},test:function(testName,expected,callback,async){var test;2===arguments.length&&(callback=expected,expected=null),test=new Test({testName:testName,expected:expected,async:async,callback:callback}),test.queue()},skip:function(testName){var test=new Test({testName:testName,skip:!0});test.queue()},start:function(count){var globalStartAlreadyCalled=globalStartCalled;if(config.current){if(config.current.semaphore-=count||1,config.current.semaphore>0)return;if(config.current.semaphore<0)return config.current.semaphore=0,void QUnit.pushFailure("Called start() while already started (test's semaphore was 0 already)",sourceFromStacktrace(2))}else{if(globalStartCalled=!0,runStarted)throw new Error("Called start() outside of a test context while already started");if(globalStartAlreadyCalled||count>1)throw new Error("Called start() outside of a test context too many times");if(config.autostart)throw new Error("Called start() outside of a test context when QUnit.config.autostart was true");if(!config.pageLoaded)return void(config.autostart=!0)}resumeProcessing()},stop:function(count){if(!config.current)throw new Error("Called stop() outside of a test context");config.current.semaphore+=count||1,pauseProcessing()},config:config,is:function(type,obj){return QUnit.objectType(obj)===type},objectType:function(obj){if("undefined"==typeof obj)return"undefined";if(null===obj)return"null";var match=toString.call(obj).match(/^\[object\s(.*)\]$/),type=match&&match[1]||"";switch(type){case"Number":return isNaN(obj)?"nan":"number";case"String":case"Boolean":case"Array":case"Date":case"RegExp":case"Function":return type.toLowerCase()}return"object"==typeof obj?"object":void 0},extend:extend,load:function(){config.pageLoaded=!0,extend(config,{stats:{all:0,bad:0},moduleStats:{all:0,bad:0},started:0,updateRate:1e3,autostart:!0,filter:""},!0),config.blocking=!1,config.autostart&&resumeProcessing()}}),function(){function registerLoggingCallback(key){var loggingCallback=function(callback){if("function"!==QUnit.objectType(callback))throw new Error("QUnit logging methods require a callback function as their first parameters.");config.callbacks[key].push(callback)};return loggingCallbacks[key]=loggingCallback,loggingCallback}var i,l,key,callbacks=["begin","done","log","testStart","testDone","moduleStart","moduleDone"];for(i=0,l=callbacks.length;l>i;i++)key=callbacks[i],"undefined"===QUnit.objectType(config.callbacks[key])&&(config.callbacks[key]=[]),QUnit[key]=registerLoggingCallback(key)}(),onErrorFnPrev=window.onerror,window.onerror=function(error,filePath,linerNr){var ret=!1;if(onErrorFnPrev&&(ret=onErrorFnPrev(error,filePath,linerNr)),ret!==!0){if(QUnit.config.current){if(QUnit.config.current.ignoreGlobalErrors)return!0;QUnit.pushFailure(error,filePath+":"+linerNr)}else QUnit.test("global failure",extend(function(){QUnit.pushFailure(error,filePath+":"+linerNr)},{validTest:!0}));return!1}return ret},Test.count=0,Test.prototype={before:function(){this.module===config.previousModule&&hasOwn.call(config,"previousModule")||(hasOwn.call(config,"previousModule")&&runLoggingCallbacks("moduleDone",{name:config.previousModule.name,tests:config.previousModule.tests,failed:config.moduleStats.bad,passed:config.moduleStats.all-config.moduleStats.bad,total:config.moduleStats.all,runtime:now()-config.moduleStats.started}),config.previousModule=this.module,config.moduleStats={all:0,bad:0,started:now()},runLoggingCallbacks("moduleStart",{name:this.module.name,tests:this.module.tests})),config.current=this,this.testEnvironment=extend({},this.module.testEnvironment),delete this.testEnvironment.beforeEach,delete this.testEnvironment.afterEach,this.started=now(),runLoggingCallbacks("testStart",{name:this.testName,module:this.module.name,testId:this.testId}),config.pollution||saveGlobal()},run:function(){var promise;if(config.current=this,this.async&&QUnit.stop(),this.callbackStarted=now(),config.notrycatch)return promise=this.callback.call(this.testEnvironment,this.assert),void this.resolvePromise(promise);try{promise=this.callback.call(this.testEnvironment,this.assert),this.resolvePromise(promise)}catch(e){this.pushFailure("Died on test #"+(this.assertions.length+1)+" "+this.stack+": "+(e.message||e),extractStacktrace(e,0)),saveGlobal(),config.blocking&&QUnit.start()}},after:function(){checkPollution()},queueHook:function(hook,hookName){var promise,test=this;return function(){if(config.current=test,config.notrycatch)return promise=hook.call(test.testEnvironment,test.assert),void test.resolvePromise(promise,hookName);try{promise=hook.call(test.testEnvironment,test.assert),test.resolvePromise(promise,hookName)}catch(error){test.pushFailure(hookName+" failed on "+test.testName+": "+(error.message||error),extractStacktrace(error,0))}}},hooks:function(handler){var hooks=[];return this.skip?hooks:(this.module.testEnvironment&&"function"===QUnit.objectType(this.module.testEnvironment[handler])&&hooks.push(this.queueHook(this.module.testEnvironment[handler],handler)),hooks)},finish:function(){config.current=this,config.requireExpects&&null===this.expected?this.pushFailure("Expected number of assertions to be defined, but expect() was not called.",this.stack):null!==this.expected&&this.expected!==this.assertions.length?this.pushFailure("Expected "+this.expected+" assertions, but "+this.assertions.length+" were run",this.stack):null!==this.expected||this.assertions.length||this.pushFailure("Expected at least one assertion, but none were run - call expect(0) to accept zero assertions.",this.stack);var i,bad=0;for(this.runtime=now()-this.started,config.stats.all+=this.assertions.length,config.moduleStats.all+=this.assertions.length,i=0;i<this.assertions.length;i++)this.assertions[i].result||(bad++,config.stats.bad++,config.moduleStats.bad++);runLoggingCallbacks("testDone",{name:this.testName,module:this.module.name,skipped:!!this.skip,failed:bad,passed:this.assertions.length-bad,total:this.assertions.length,runtime:this.runtime,assertions:this.assertions,testId:this.testId,duration:this.runtime}),QUnit.reset(),config.current=void 0},queue:function(){function run(){synchronize([function(){test.before()},test.hooks("beforeEach"),function(){test.run()},test.hooks("afterEach").reverse(),function(){test.after()},function(){test.finish()}])}var bad,test=this;this.valid()&&(bad=QUnit.config.reorder&&defined.sessionStorage&&+sessionStorage.getItem("qunit-test-"+this.module.name+"-"+this.testName),bad?run():synchronize(run,!0))},push:function(result,actual,expected,message){var source,details={module:this.module.name,name:this.testName,result:result,message:message,actual:actual,expected:expected,testId:this.testId,runtime:now()-this.started};result||(source=sourceFromStacktrace(),source&&(details.source=source)),runLoggingCallbacks("log",details),this.assertions.push({result:!!result,message:message})},pushFailure:function(message,source,actual){if(!this instanceof Test)throw new Error("pushFailure() assertion outside test context, was "+sourceFromStacktrace(2));var details={module:this.module.name,name:this.testName,result:!1,message:message||"error",actual:actual||null,testId:this.testId,runtime:now()-this.started};source&&(details.source=source),runLoggingCallbacks("log",details),this.assertions.push({result:!1,message:message})},resolvePromise:function(promise,phase){var then,message,test=this;null!=promise&&(then=promise.then,"function"===QUnit.objectType(then)&&(QUnit.stop(),then.call(promise,QUnit.start,function(error){message="Promise rejected "+(phase?phase.replace(/Each$/,""):"during")+" "+test.testName+": "+(error.message||error),test.pushFailure(message,extractStacktrace(error,0)),saveGlobal(),QUnit.start()})))},valid:function(){var include,filter=config.filter&&config.filter.toLowerCase(),module=QUnit.urlParams.module&&QUnit.urlParams.module.toLowerCase(),fullName=(this.module.name+": "+this.testName).toLowerCase();return this.callback&&this.callback.validTest?!0:config.testId.length>0&&inArray(this.testId,config.testId)<0?!1:!module||this.module.name&&this.module.name.toLowerCase()===module?filter?(include="!"!==filter.charAt(0),include||(filter=filter.slice(1)),-1!==fullName.indexOf(filter)?include:!include):!0:!1}},QUnit.reset=function(){if("undefined"!=typeof window){var fixture=defined.document&&document.getElementById&&document.getElementById("qunit-fixture");fixture&&(fixture.innerHTML=config.fixture)}},QUnit.pushFailure=function(){if(!QUnit.config.current)throw new Error("pushFailure() assertion outside test context, in "+sourceFromStacktrace(2));var currentTest=QUnit.config.current;return currentTest.pushFailure.apply(currentTest,arguments)},QUnit.assert=Assert.prototype={expect:function(asserts){return 1!==arguments.length?this.test.expected:void(this.test.expected=asserts)},async:function(){var test=this.test,popped=!1;return test.semaphore+=1,test.usedAsync=!0,pauseProcessing(),function(){popped?test.pushFailure("Called the callback returned from `assert.async` more than once",sourceFromStacktrace(2)):(test.semaphore-=1,popped=!0,resumeProcessing())}},push:function(){var assert=this,currentTest=assert instanceof Assert&&assert.test||QUnit.config.current;if(!currentTest)throw new Error("assertion outside test context, in "+sourceFromStacktrace(2));return currentTest.usedAsync===!0&&0===currentTest.semaphore&&currentTest.pushFailure("Assertion after the final `assert.async` was resolved",sourceFromStacktrace(2)),assert instanceof Assert||(assert=currentTest.assert),assert.test.push.apply(assert.test,arguments)},ok:function(result,message){message=message||(result?"okay":"failed, expected argument to be truthy, was: "+QUnit.dump.parse(result)),this.push(!!result,result,!0,message)},notOk:function(result,message){message=message||(result?"failed, expected argument to be falsy, was: "+QUnit.dump.parse(result):"okay"),this.push(!result,result,!1,message)},equal:function(actual,expected,message){this.push(expected==actual,actual,expected,message)},notEqual:function(actual,expected,message){this.push(expected!=actual,actual,expected,message)},propEqual:function(actual,expected,message){actual=objectValues(actual),expected=objectValues(expected),this.push(QUnit.equiv(actual,expected),actual,expected,message)},notPropEqual:function(actual,expected,message){actual=objectValues(actual),expected=objectValues(expected),this.push(!QUnit.equiv(actual,expected),actual,expected,message)},deepEqual:function(actual,expected,message){this.push(QUnit.equiv(actual,expected),actual,expected,message)},notDeepEqual:function(actual,expected,message){this.push(!QUnit.equiv(actual,expected),actual,expected,message)},strictEqual:function(actual,expected,message){this.push(expected===actual,actual,expected,message)},notStrictEqual:function(actual,expected,message){this.push(expected!==actual,actual,expected,message)},"throws":function(block,expected,message){var actual,expectedType,expectedOutput=expected,ok=!1,currentTest=this instanceof Assert&&this.test||QUnit.config.current;null==message&&"string"==typeof expected&&(message=expected,expected=null),currentTest.ignoreGlobalErrors=!0;try{block.call(currentTest.testEnvironment)}catch(e){actual=e}currentTest.ignoreGlobalErrors=!1,actual&&(expectedType=QUnit.objectType(expected),expected?"regexp"===expectedType?ok=expected.test(errorString(actual)):"string"===expectedType?ok=expected===errorString(actual):"function"===expectedType&&actual instanceof expected?ok=!0:"object"===expectedType?ok=actual instanceof expected.constructor&&actual.name===expected.name&&actual.message===expected.message:"function"===expectedType&&expected.call({},actual)===!0&&(expectedOutput=null,ok=!0):(ok=!0,expectedOutput=null)),currentTest.assert.push(ok,actual,expectedOutput,message)}},function(){Assert.prototype.raises=Assert.prototype["throws"]}(),QUnit.equiv=function(){function bindCallbacks(o,callbacks,args){var prop=QUnit.objectType(o);return prop?"function"===QUnit.objectType(callbacks[prop])?callbacks[prop].apply(callbacks,args):callbacks[prop]:void 0}var innerEquiv,callers=[],parents=[],parentsB=[],getProto=Object.getPrototypeOf||function(obj){return obj.__proto__},callbacks=function(){function useStrictEquality(b,a){return b instanceof a.constructor||a instanceof b.constructor?a==b:a===b}return{string:useStrictEquality,"boolean":useStrictEquality,number:useStrictEquality,"null":useStrictEquality,undefined:useStrictEquality,nan:function(b){return isNaN(b)},date:function(b,a){return"date"===QUnit.objectType(b)&&a.valueOf()===b.valueOf()},regexp:function(b,a){return"regexp"===QUnit.objectType(b)&&a.source===b.source&&a.global===b.global&&a.ignoreCase===b.ignoreCase&&a.multiline===b.multiline&&a.sticky===b.sticky},"function":function(){var caller=callers[callers.length-1];return caller!==Object&&"undefined"!=typeof caller},array:function(b,a){var i,j,len,loop,aCircular,bCircular;if("array"!==QUnit.objectType(b))return!1;if(len=a.length,len!==b.length)return!1;for(parents.push(a),parentsB.push(b),i=0;len>i;i++){for(loop=!1,j=0;j<parents.length;j++)if(aCircular=parents[j]===a[i],bCircular=parentsB[j]===b[i],aCircular||bCircular){if(!(a[i]===b[i]||aCircular&&bCircular))return parents.pop(),parentsB.pop(),!1;loop=!0}if(!loop&&!innerEquiv(a[i],b[i]))return parents.pop(),parentsB.pop(),!1}return parents.pop(),parentsB.pop(),!0},object:function(b,a){var i,j,loop,aCircular,bCircular,eq=!0,aProperties=[],bProperties=[];if(a.constructor!==b.constructor&&!(null===getProto(a)&&getProto(b)===Object.prototype||null===getProto(b)&&getProto(a)===Object.prototype))return!1;callers.push(a.constructor),parents.push(a),parentsB.push(b);for(i in a){for(loop=!1,j=0;j<parents.length;j++)if(aCircular=parents[j]===a[i],bCircular=parentsB[j]===b[i],aCircular||bCircular){if(!(a[i]===b[i]||aCircular&&bCircular)){eq=!1;break}loop=!0}if(aProperties.push(i),!loop&&!innerEquiv(a[i],b[i])){eq=!1;break}}parents.pop(),parentsB.pop(),callers.pop();for(i in b)bProperties.push(i);return eq&&innerEquiv(aProperties.sort(),bProperties.sort())}}}();return innerEquiv=function(){var args=[].slice.apply(arguments);return args.length<2?!0:function(a,b){return a===b?!0:null===a||null===b||"undefined"==typeof a||"undefined"==typeof b||QUnit.objectType(a)!==QUnit.objectType(b)?!1:bindCallbacks(a,callbacks,[b,a])}(args[0],args[1])&&innerEquiv.apply(this,args.splice(1,args.length-1))}}(),QUnit.dump=function(){function quote(str){return'"'+str.toString().replace(/"/g,'\\"')+'"'}function literal(o){return o+""}function join(pre,arr,post){var s=dump.separator(),base=dump.indent(),inner=dump.indent(1);return arr.join&&(arr=arr.join(","+s+inner)),arr?[pre,inner+arr,base+post].join(s):pre+post}function array(arr,stack){var i=arr.length,ret=new Array(i);if(dump.maxDepth&&dump.depth>dump.maxDepth)return"[object Array]";for(this.up();i--;)ret[i]=this.parse(arr[i],void 0,stack);return this.down(),join("[",ret,"]")}var reName=/^function (\w+)/,dump={parse:function(obj,objType,stack){stack=stack||[];var res,parser,parserType,inStack=inArray(obj,stack);return-1!==inStack?"recursion("+(inStack-stack.length)+")":(objType=objType||this.typeOf(obj),parser=this.parsers[objType],parserType=typeof parser,"function"===parserType?(stack.push(obj),res=parser.call(this,obj,stack),stack.pop(),res):"string"===parserType?parser:this.parsers.error)},typeOf:function(obj){var type;return type=null===obj?"null":"undefined"==typeof obj?"undefined":QUnit.is("regexp",obj)?"regexp":QUnit.is("date",obj)?"date":QUnit.is("function",obj)?"function":void 0!==obj.setInterval&&void 0!==obj.document&&void 0===obj.nodeType?"window":9===obj.nodeType?"document":obj.nodeType?"node":"[object Array]"===toString.call(obj)||"number"==typeof obj.length&&void 0!==obj.item&&(obj.length?obj.item(0)===obj[0]:null===obj.item(0)&&void 0===obj[0])?"array":obj.constructor===Error.prototype.constructor?"error":typeof obj},separator:function(){return this.multiline?this.HTML?"<br />":"\n":this.HTML?"&#160;":" "},indent:function(extra){if(!this.multiline)return"";var chr=this.indentChar;return this.HTML&&(chr=chr.replace(/\t/g,"   ").replace(/ /g,"&#160;")),new Array(this.depth+(extra||0)).join(chr)},up:function(a){this.depth+=a||1},down:function(a){this.depth-=a||1},setParser:function(name,parser){this.parsers[name]=parser},quote:quote,literal:literal,join:join,depth:1,maxDepth:QUnit.config.maxDepth,parsers:{window:"[Window]",document:"[Document]",error:function(error){return'Error("'+error.message+'")'},unknown:"[Unknown]","null":"null",undefined:"undefined","function":function(fn){var ret="function",name="name"in fn?fn.name:(reName.exec(fn)||[])[1];return name&&(ret+=" "+name),ret+="( ",ret=[ret,dump.parse(fn,"functionArgs"),"){"].join(""),join(ret,dump.parse(fn,"functionCode"),"}")},array:array,nodelist:array,arguments:array,object:function(map,stack){var keys,key,val,i,nonEnumerableProperties,ret=[];if(dump.maxDepth&&dump.depth>dump.maxDepth)return"[object Object]";dump.up(),keys=[];for(key in map)keys.push(key);nonEnumerableProperties=["message","name"];for(i in nonEnumerableProperties)key=nonEnumerableProperties[i],key in map&&inArray(key,keys)<0&&keys.push(key);for(keys.sort(),i=0;i<keys.length;i++)key=keys[i],val=map[key],ret.push(dump.parse(key,"key")+": "+dump.parse(val,void 0,stack));return dump.down(),join("{",ret,"}")},node:function(node){var len,i,val,open=dump.HTML?"&lt;":"<",close=dump.HTML?"&gt;":">",tag=node.nodeName.toLowerCase(),ret=open+tag,attrs=node.attributes;if(attrs)for(i=0,len=attrs.length;len>i;i++)val=attrs[i].nodeValue,val&&"inherit"!==val&&(ret+=" "+attrs[i].nodeName+"="+dump.parse(val,"attribute"));return ret+=close,(3===node.nodeType||4===node.nodeType)&&(ret+=node.nodeValue),ret+open+"/"+tag+close},functionArgs:function(fn){var args,l=fn.length;if(!l)return"";for(args=new Array(l);l--;)args[l]=String.fromCharCode(97+l);return" "+args.join(", ")+" "},key:quote,functionCode:"[code]",attribute:quote,string:quote,date:quote,regexp:literal,number:literal,"boolean":literal},HTML:!1,indentChar:"  ",multiline:!0};return dump}(),QUnit.jsDump=QUnit.dump,"undefined"!=typeof window&&(!function(){function applyCurrent(current){return function(){var assert=new Assert(QUnit.config.current);current.apply(assert,arguments)}}var i,assertions=Assert.prototype;for(i in assertions)QUnit[i]=applyCurrent(assertions[i])}(),function(){var i,l,keys=["test","module","expect","asyncTest","start","stop","ok","notOk","equal","notEqual","propEqual","notPropEqual","deepEqual","notDeepEqual","strictEqual","notStrictEqual","throws"];for(i=0,l=keys.length;l>i;i++)window[keys[i]]=QUnit[keys[i]]}(),window.QUnit=QUnit),"undefined"!=typeof module&&module&&module.exports&&(module.exports=QUnit,module.exports.QUnit=QUnit),"undefined"!=typeof exports&&exports&&(exports.QUnit=QUnit),"function"==typeof define&&define.amd&&(define([],function(){return QUnit}),QUnit.config.autostart=!1)}(function(){return this}()),QUnit.diff=function(){function DiffMatchPatch(){this.DiffTimeout=1,this.DiffEditCost=4}var DIFF_DELETE=-1,DIFF_INSERT=1,DIFF_EQUAL=0;return DiffMatchPatch.prototype.DiffMain=function(text1,text2,optChecklines,optDeadline){var deadline,checklines,commonlength,commonprefix,commonsuffix,diffs;if("undefined"==typeof optDeadline&&(optDeadline=this.DiffTimeout<=0?Number.MAX_VALUE:(new Date).getTime()+1e3*this.DiffTimeout),deadline=optDeadline,null===text1||null===text2)throw new Error("Null input. (DiffMain)");return text1===text2?text1?[[DIFF_EQUAL,text1]]:[]:("undefined"==typeof optChecklines&&(optChecklines=!0),checklines=optChecklines,commonlength=this.diffCommonPrefix(text1,text2),commonprefix=text1.substring(0,commonlength),text1=text1.substring(commonlength),text2=text2.substring(commonlength),commonlength=this.diffCommonSuffix(text1,text2),commonsuffix=text1.substring(text1.length-commonlength),text1=text1.substring(0,text1.length-commonlength),text2=text2.substring(0,text2.length-commonlength),diffs=this.diffCompute(text1,text2,checklines,deadline),commonprefix&&diffs.unshift([DIFF_EQUAL,commonprefix]),commonsuffix&&diffs.push([DIFF_EQUAL,commonsuffix]),this.diffCleanupMerge(diffs),diffs)},DiffMatchPatch.prototype.diffCleanupEfficiency=function(diffs){var changes,equalities,equalitiesLength,lastequality,pointer,preIns,preDel,postIns,postDel;for(changes=!1,equalities=[],equalitiesLength=0,lastequality=null,pointer=0,preIns=!1,preDel=!1,postIns=!1,postDel=!1;pointer<diffs.length;)diffs[pointer][0]===DIFF_EQUAL?(diffs[pointer][1].length<this.DiffEditCost&&(postIns||postDel)?(equalities[equalitiesLength++]=pointer,preIns=postIns,preDel=postDel,lastequality=diffs[pointer][1]):(equalitiesLength=0,lastequality=null),postIns=postDel=!1):(diffs[pointer][0]===DIFF_DELETE?postDel=!0:postIns=!0,lastequality&&(preIns&&preDel&&postIns&&postDel||lastequality.length<this.DiffEditCost/2&&preIns+preDel+postIns+postDel===3)&&(diffs.splice(equalities[equalitiesLength-1],0,[DIFF_DELETE,lastequality]),diffs[equalities[equalitiesLength-1]+1][0]=DIFF_INSERT,equalitiesLength--,lastequality=null,preIns&&preDel?(postIns=postDel=!0,equalitiesLength=0):(equalitiesLength--,pointer=equalitiesLength>0?equalities[equalitiesLength-1]:-1,postIns=postDel=!1),changes=!0)),pointer++;changes&&this.diffCleanupMerge(diffs)},DiffMatchPatch.prototype.diffPrettyHtml=function(diffs){var op,data,x,html=[];for(x=0;x<diffs.length;x++)switch(op=diffs[x][0],data=diffs[x][1],op){case DIFF_INSERT:html[x]="<ins>"+data+"</ins>";break;case DIFF_DELETE:html[x]="<del>"+data+"</del>";break;case DIFF_EQUAL:html[x]="<span>"+data+"</span>"}return html.join("")},DiffMatchPatch.prototype.diffCommonPrefix=function(text1,text2){var pointermid,pointermax,pointermin,pointerstart;if(!text1||!text2||text1.charAt(0)!==text2.charAt(0))return 0;for(pointermin=0,pointermax=Math.min(text1.length,text2.length),pointermid=pointermax,pointerstart=0;pointermid>pointermin;)text1.substring(pointerstart,pointermid)===text2.substring(pointerstart,pointermid)?(pointermin=pointermid,pointerstart=pointermin):pointermax=pointermid,pointermid=Math.floor((pointermax-pointermin)/2+pointermin);return pointermid},DiffMatchPatch.prototype.diffCommonSuffix=function(text1,text2){var pointermid,pointermax,pointermin,pointerend;if(!text1||!text2||text1.charAt(text1.length-1)!==text2.charAt(text2.length-1))return 0;for(pointermin=0,pointermax=Math.min(text1.length,text2.length),pointermid=pointermax,pointerend=0;pointermid>pointermin;)text1.substring(text1.length-pointermid,text1.length-pointerend)===text2.substring(text2.length-pointermid,text2.length-pointerend)?(pointermin=pointermid,pointerend=pointermin):pointermax=pointermid,pointermid=Math.floor((pointermax-pointermin)/2+pointermin);return pointermid},DiffMatchPatch.prototype.diffCompute=function(text1,text2,checklines,deadline){var diffs,longtext,shorttext,i,hm,text1A,text2A,text1B,text2B,midCommon,diffsA,diffsB;return text1?text2?(longtext=text1.length>text2.length?text1:text2,shorttext=text1.length>text2.length?text2:text1,i=longtext.indexOf(shorttext),-1!==i?(diffs=[[DIFF_INSERT,longtext.substring(0,i)],[DIFF_EQUAL,shorttext],[DIFF_INSERT,longtext.substring(i+shorttext.length)]],text1.length>text2.length&&(diffs[0][0]=diffs[2][0]=DIFF_DELETE),diffs):1===shorttext.length?[[DIFF_DELETE,text1],[DIFF_INSERT,text2]]:(hm=this.diffHalfMatch(text1,text2),hm?(text1A=hm[0],text1B=hm[1],text2A=hm[2],text2B=hm[3],midCommon=hm[4],diffsA=this.DiffMain(text1A,text2A,checklines,deadline),diffsB=this.DiffMain(text1B,text2B,checklines,deadline),diffsA.concat([[DIFF_EQUAL,midCommon]],diffsB)):checklines&&text1.length>100&&text2.length>100?this.diffLineMode(text1,text2,deadline):this.diffBisect(text1,text2,deadline))):[[DIFF_DELETE,text1]]:[[DIFF_INSERT,text2]]
},DiffMatchPatch.prototype.diffHalfMatch=function(text1,text2){function diffHalfMatchI(longtext,shorttext,i){var seed,j,bestCommon,prefixLength,suffixLength,bestLongtextA,bestLongtextB,bestShorttextA,bestShorttextB;for(seed=longtext.substring(i,i+Math.floor(longtext.length/4)),j=-1,bestCommon="";-1!==(j=shorttext.indexOf(seed,j+1));)prefixLength=dmp.diffCommonPrefix(longtext.substring(i),shorttext.substring(j)),suffixLength=dmp.diffCommonSuffix(longtext.substring(0,i),shorttext.substring(0,j)),bestCommon.length<suffixLength+prefixLength&&(bestCommon=shorttext.substring(j-suffixLength,j)+shorttext.substring(j,j+prefixLength),bestLongtextA=longtext.substring(0,i-suffixLength),bestLongtextB=longtext.substring(i+prefixLength),bestShorttextA=shorttext.substring(0,j-suffixLength),bestShorttextB=shorttext.substring(j+prefixLength));return 2*bestCommon.length>=longtext.length?[bestLongtextA,bestLongtextB,bestShorttextA,bestShorttextB,bestCommon]:null}var longtext,shorttext,dmp,text1A,text2B,text2A,text1B,midCommon,hm1,hm2,hm;return this.DiffTimeout<=0?null:(longtext=text1.length>text2.length?text1:text2,shorttext=text1.length>text2.length?text2:text1,longtext.length<4||2*shorttext.length<longtext.length?null:(dmp=this,hm1=diffHalfMatchI(longtext,shorttext,Math.ceil(longtext.length/4)),hm2=diffHalfMatchI(longtext,shorttext,Math.ceil(longtext.length/2)),hm1||hm2?(hm=hm2?hm1&&hm1[4].length>hm2[4].length?hm1:hm2:hm1,text1.length>text2.length?(text1A=hm[0],text1B=hm[1],text2A=hm[2],text2B=hm[3]):(text2A=hm[0],text2B=hm[1],text1A=hm[2],text1B=hm[3]),midCommon=hm[4],[text1A,text1B,text2A,text2B,midCommon]):null))},DiffMatchPatch.prototype.diffLineMode=function(text1,text2,deadline){var a,diffs,linearray,pointer,countInsert,countDelete,textInsert,textDelete,j;for(a=this.diffLinesToChars(text1,text2),text1=a.chars1,text2=a.chars2,linearray=a.lineArray,diffs=this.DiffMain(text1,text2,!1,deadline),this.diffCharsToLines(diffs,linearray),this.diffCleanupSemantic(diffs),diffs.push([DIFF_EQUAL,""]),pointer=0,countDelete=0,countInsert=0,textDelete="",textInsert="";pointer<diffs.length;){switch(diffs[pointer][0]){case DIFF_INSERT:countInsert++,textInsert+=diffs[pointer][1];break;case DIFF_DELETE:countDelete++,textDelete+=diffs[pointer][1];break;case DIFF_EQUAL:if(countDelete>=1&&countInsert>=1){for(diffs.splice(pointer-countDelete-countInsert,countDelete+countInsert),pointer=pointer-countDelete-countInsert,a=this.DiffMain(textDelete,textInsert,!1,deadline),j=a.length-1;j>=0;j--)diffs.splice(pointer,0,a[j]);pointer+=a.length}countInsert=0,countDelete=0,textDelete="",textInsert=""}pointer++}return diffs.pop(),diffs},DiffMatchPatch.prototype.diffBisect=function(text1,text2,deadline){var text1Length,text2Length,maxD,vOffset,vLength,v1,v2,x,delta,front,k1start,k1end,k2start,k2end,k2Offset,k1Offset,x1,x2,y1,y2,d,k1,k2;for(text1Length=text1.length,text2Length=text2.length,maxD=Math.ceil((text1Length+text2Length)/2),vOffset=maxD,vLength=2*maxD,v1=new Array(vLength),v2=new Array(vLength),x=0;vLength>x;x++)v1[x]=-1,v2[x]=-1;for(v1[vOffset+1]=0,v2[vOffset+1]=0,delta=text1Length-text2Length,front=delta%2!==0,k1start=0,k1end=0,k2start=0,k2end=0,d=0;maxD>d&&!((new Date).getTime()>deadline);d++){for(k1=-d+k1start;d-k1end>=k1;k1+=2){for(k1Offset=vOffset+k1,x1=k1===-d||k1!==d&&v1[k1Offset-1]<v1[k1Offset+1]?v1[k1Offset+1]:v1[k1Offset-1]+1,y1=x1-k1;text1Length>x1&&text2Length>y1&&text1.charAt(x1)===text2.charAt(y1);)x1++,y1++;if(v1[k1Offset]=x1,x1>text1Length)k1end+=2;else if(y1>text2Length)k1start+=2;else if(front&&(k2Offset=vOffset+delta-k1,k2Offset>=0&&vLength>k2Offset&&-1!==v2[k2Offset]&&(x2=text1Length-v2[k2Offset],x1>=x2)))return this.diffBisectSplit(text1,text2,x1,y1,deadline)}for(k2=-d+k2start;d-k2end>=k2;k2+=2){for(k2Offset=vOffset+k2,x2=k2===-d||k2!==d&&v2[k2Offset-1]<v2[k2Offset+1]?v2[k2Offset+1]:v2[k2Offset-1]+1,y2=x2-k2;text1Length>x2&&text2Length>y2&&text1.charAt(text1Length-x2-1)===text2.charAt(text2Length-y2-1);)x2++,y2++;if(v2[k2Offset]=x2,x2>text1Length)k2end+=2;else if(y2>text2Length)k2start+=2;else if(!front&&(k1Offset=vOffset+delta-k2,k1Offset>=0&&vLength>k1Offset&&-1!==v1[k1Offset]&&(x1=v1[k1Offset],y1=vOffset+x1-k1Offset,x2=text1Length-x2,x1>=x2)))return this.diffBisectSplit(text1,text2,x1,y1,deadline)}}return[[DIFF_DELETE,text1],[DIFF_INSERT,text2]]},DiffMatchPatch.prototype.diffBisectSplit=function(text1,text2,x,y,deadline){var text1a,text1b,text2a,text2b,diffs,diffsb;return text1a=text1.substring(0,x),text2a=text2.substring(0,y),text1b=text1.substring(x),text2b=text2.substring(y),diffs=this.DiffMain(text1a,text2a,!1,deadline),diffsb=this.DiffMain(text1b,text2b,!1,deadline),diffs.concat(diffsb)},DiffMatchPatch.prototype.diffCleanupSemantic=function(diffs){var changes,equalities,equalitiesLength,lastequality,pointer,lengthInsertions2,lengthDeletions2,lengthInsertions1,lengthDeletions1,deletion,insertion,overlapLength1,overlapLength2;for(changes=!1,equalities=[],equalitiesLength=0,lastequality=null,pointer=0,lengthInsertions1=0,lengthDeletions1=0,lengthInsertions2=0,lengthDeletions2=0;pointer<diffs.length;)diffs[pointer][0]===DIFF_EQUAL?(equalities[equalitiesLength++]=pointer,lengthInsertions1=lengthInsertions2,lengthDeletions1=lengthDeletions2,lengthInsertions2=0,lengthDeletions2=0,lastequality=diffs[pointer][1]):(diffs[pointer][0]===DIFF_INSERT?lengthInsertions2+=diffs[pointer][1].length:lengthDeletions2+=diffs[pointer][1].length,lastequality&&lastequality.length<=Math.max(lengthInsertions1,lengthDeletions1)&&lastequality.length<=Math.max(lengthInsertions2,lengthDeletions2)&&(diffs.splice(equalities[equalitiesLength-1],0,[DIFF_DELETE,lastequality]),diffs[equalities[equalitiesLength-1]+1][0]=DIFF_INSERT,equalitiesLength--,equalitiesLength--,pointer=equalitiesLength>0?equalities[equalitiesLength-1]:-1,lengthInsertions1=0,lengthDeletions1=0,lengthInsertions2=0,lengthDeletions2=0,lastequality=null,changes=!0)),pointer++;for(changes&&this.diffCleanupMerge(diffs),pointer=1;pointer<diffs.length;)diffs[pointer-1][0]===DIFF_DELETE&&diffs[pointer][0]===DIFF_INSERT&&(deletion=diffs[pointer-1][1],insertion=diffs[pointer][1],overlapLength1=this.diffCommonOverlap(deletion,insertion),overlapLength2=this.diffCommonOverlap(insertion,deletion),overlapLength1>=overlapLength2?(overlapLength1>=deletion.length/2||overlapLength1>=insertion.length/2)&&(diffs.splice(pointer,0,[DIFF_EQUAL,insertion.substring(0,overlapLength1)]),diffs[pointer-1][1]=deletion.substring(0,deletion.length-overlapLength1),diffs[pointer+1][1]=insertion.substring(overlapLength1),pointer++):(overlapLength2>=deletion.length/2||overlapLength2>=insertion.length/2)&&(diffs.splice(pointer,0,[DIFF_EQUAL,deletion.substring(0,overlapLength2)]),diffs[pointer-1][0]=DIFF_INSERT,diffs[pointer-1][1]=insertion.substring(0,insertion.length-overlapLength2),diffs[pointer+1][0]=DIFF_DELETE,diffs[pointer+1][1]=deletion.substring(overlapLength2),pointer++),pointer++),pointer++},DiffMatchPatch.prototype.diffCommonOverlap=function(text1,text2){var text1Length,text2Length,textLength,best,length,pattern,found;if(text1Length=text1.length,text2Length=text2.length,0===text1Length||0===text2Length)return 0;if(text1Length>text2Length?text1=text1.substring(text1Length-text2Length):text2Length>text1Length&&(text2=text2.substring(0,text1Length)),textLength=Math.min(text1Length,text2Length),text1===text2)return textLength;for(best=0,length=1;;){if(pattern=text1.substring(textLength-length),found=text2.indexOf(pattern),-1===found)return best;length+=found,(0===found||text1.substring(textLength-length)===text2.substring(0,length))&&(best=length,length++)}},DiffMatchPatch.prototype.diffLinesToChars=function(text1,text2){function diffLinesToCharsMunge(text){var chars,lineStart,lineEnd,lineArrayLength,line;for(chars="",lineStart=0,lineEnd=-1,lineArrayLength=lineArray.length;lineEnd<text.length-1;)lineEnd=text.indexOf("\n",lineStart),-1===lineEnd&&(lineEnd=text.length-1),line=text.substring(lineStart,lineEnd+1),lineStart=lineEnd+1,(lineHash.hasOwnProperty?lineHash.hasOwnProperty(line):void 0!==lineHash[line])?chars+=String.fromCharCode(lineHash[line]):(chars+=String.fromCharCode(lineArrayLength),lineHash[line]=lineArrayLength,lineArray[lineArrayLength++]=line);return chars}var lineArray,lineHash,chars1,chars2;return lineArray=[],lineHash={},lineArray[0]="",chars1=diffLinesToCharsMunge(text1),chars2=diffLinesToCharsMunge(text2),{chars1:chars1,chars2:chars2,lineArray:lineArray}},DiffMatchPatch.prototype.diffCharsToLines=function(diffs,lineArray){var x,chars,text,y;for(x=0;x<diffs.length;x++){for(chars=diffs[x][1],text=[],y=0;y<chars.length;y++)text[y]=lineArray[chars.charCodeAt(y)];diffs[x][1]=text.join("")}},DiffMatchPatch.prototype.diffCleanupMerge=function(diffs){var pointer,countDelete,countInsert,textInsert,textDelete,commonlength,changes;for(diffs.push([DIFF_EQUAL,""]),pointer=0,countDelete=0,countInsert=0,textDelete="",textInsert="";pointer<diffs.length;)switch(diffs[pointer][0]){case DIFF_INSERT:countInsert++,textInsert+=diffs[pointer][1],pointer++;break;case DIFF_DELETE:countDelete++,textDelete+=diffs[pointer][1],pointer++;break;case DIFF_EQUAL:countDelete+countInsert>1?(0!==countDelete&&0!==countInsert&&(commonlength=this.diffCommonPrefix(textInsert,textDelete),0!==commonlength&&(pointer-countDelete-countInsert>0&&diffs[pointer-countDelete-countInsert-1][0]===DIFF_EQUAL?diffs[pointer-countDelete-countInsert-1][1]+=textInsert.substring(0,commonlength):(diffs.splice(0,0,[DIFF_EQUAL,textInsert.substring(0,commonlength)]),pointer++),textInsert=textInsert.substring(commonlength),textDelete=textDelete.substring(commonlength)),commonlength=this.diffCommonSuffix(textInsert,textDelete),0!==commonlength&&(diffs[pointer][1]=textInsert.substring(textInsert.length-commonlength)+diffs[pointer][1],textInsert=textInsert.substring(0,textInsert.length-commonlength),textDelete=textDelete.substring(0,textDelete.length-commonlength))),0===countDelete?diffs.splice(pointer-countInsert,countDelete+countInsert,[DIFF_INSERT,textInsert]):0===countInsert?diffs.splice(pointer-countDelete,countDelete+countInsert,[DIFF_DELETE,textDelete]):diffs.splice(pointer-countDelete-countInsert,countDelete+countInsert,[DIFF_DELETE,textDelete],[DIFF_INSERT,textInsert]),pointer=pointer-countDelete-countInsert+(countDelete?1:0)+(countInsert?1:0)+1):0!==pointer&&diffs[pointer-1][0]===DIFF_EQUAL?(diffs[pointer-1][1]+=diffs[pointer][1],diffs.splice(pointer,1)):pointer++,countInsert=0,countDelete=0,textDelete="",textInsert=""}for(""===diffs[diffs.length-1][1]&&diffs.pop(),changes=!1,pointer=1;pointer<diffs.length-1;)diffs[pointer-1][0]===DIFF_EQUAL&&diffs[pointer+1][0]===DIFF_EQUAL&&(diffs[pointer][1].substring(diffs[pointer][1].length-diffs[pointer-1][1].length)===diffs[pointer-1][1]?(diffs[pointer][1]=diffs[pointer-1][1]+diffs[pointer][1].substring(0,diffs[pointer][1].length-diffs[pointer-1][1].length),diffs[pointer+1][1]=diffs[pointer-1][1]+diffs[pointer+1][1],diffs.splice(pointer-1,1),changes=!0):diffs[pointer][1].substring(0,diffs[pointer+1][1].length)===diffs[pointer+1][1]&&(diffs[pointer-1][1]+=diffs[pointer+1][1],diffs[pointer][1]=diffs[pointer][1].substring(diffs[pointer+1][1].length)+diffs[pointer+1][1],diffs.splice(pointer+1,1),changes=!0)),pointer++;changes&&this.diffCleanupMerge(diffs)},function(o,n){var diff,output,text;return diff=new DiffMatchPatch,output=diff.DiffMain(o,n),diff.diffCleanupEfficiency(output),text=diff.diffPrettyHtml(output)}}(),function(){function escapeText(s){return s?(s+="",s.replace(/['"<>&]/g,function(s){switch(s){case"'":return"&#039;";case'"':return"&quot;";case"<":return"&lt;";case">":return"&gt;";case"&":return"&amp;"}})):""}function addEvent(elem,type,fn){elem.addEventListener?elem.addEventListener(type,fn,!1):elem.attachEvent&&elem.attachEvent("on"+type,function(){var event=window.event;event.target||(event.target=event.srcElement||document),fn.call(elem,event)})}function addEvents(elems,type,fn){for(var i=elems.length;i--;)addEvent(elems[i],type,fn)}function hasClass(elem,name){return(" "+elem.className+" ").indexOf(" "+name+" ")>=0}function addClass(elem,name){hasClass(elem,name)||(elem.className+=(elem.className?" ":"")+name)}function toggleClass(elem,name){hasClass(elem,name)?removeClass(elem,name):addClass(elem,name)}function removeClass(elem,name){for(var set=" "+elem.className+" ";set.indexOf(" "+name+" ")>=0;)set=set.replace(" "+name+" "," ");elem.className="function"==typeof set.trim?set.trim():set.replace(/^\s+|\s+$/g,"")}function id(name){return defined.document&&document.getElementById&&document.getElementById(name)}function getUrlConfigHtml(){var i,j,val,escaped,escapedTooltip,selection=!1,len=config.urlConfig.length,urlConfigHtml="";for(i=0;len>i;i++)if(val=config.urlConfig[i],"string"==typeof val&&(val={id:val,label:val}),escaped=escapeText(val.id),escapedTooltip=escapeText(val.tooltip),void 0===config[val.id]&&(config[val.id]=QUnit.urlParams[val.id]),val.value&&"string"!=typeof val.value){if(urlConfigHtml+="<label for='qunit-urlconfig-"+escaped+"' title='"+escapedTooltip+"'>"+val.label+": </label><select id='qunit-urlconfig-"+escaped+"' name='"+escaped+"' title='"+escapedTooltip+"'><option></option>",QUnit.is("array",val.value))for(j=0;j<val.value.length;j++)escaped=escapeText(val.value[j]),urlConfigHtml+="<option value='"+escaped+"'"+(config[val.id]===val.value[j]?(selection=!0)&&" selected='selected'":"")+">"+escaped+"</option>";else for(j in val.value)hasOwn.call(val.value,j)&&(urlConfigHtml+="<option value='"+escapeText(j)+"'"+(config[val.id]===j?(selection=!0)&&" selected='selected'":"")+">"+escapeText(val.value[j])+"</option>");config[val.id]&&!selection&&(escaped=escapeText(config[val.id]),urlConfigHtml+="<option value='"+escaped+"' selected='selected' disabled='disabled'>"+escaped+"</option>"),urlConfigHtml+="</select>"}else urlConfigHtml+="<input id='qunit-urlconfig-"+escaped+"' name='"+escaped+"' type='checkbox'"+(val.value?" value='"+escapeText(val.value)+"'":"")+(config[val.id]?" checked='checked'":"")+" title='"+escapedTooltip+"' /><label for='qunit-urlconfig-"+escaped+"' title='"+escapedTooltip+"'>"+val.label+"</label>";return urlConfigHtml}function toolbarChanged(){var updatedUrl,value,field=this,params={};value="selectedIndex"in field?field.options[field.selectedIndex].value||void 0:field.checked?field.defaultValue||!0:void 0,params[field.name]=value,updatedUrl=setUrl(params),"hidepassed"===field.name&&"replaceState"in window.history?(config[field.name]=value||!1,value?addClass(id("qunit-tests"),"hidepass"):removeClass(id("qunit-tests"),"hidepass"),window.history.replaceState(null,"",updatedUrl)):window.location=updatedUrl}function setUrl(params){var key,querystring="?";params=QUnit.extend(QUnit.extend({},QUnit.urlParams),params);for(key in params)if(hasOwn.call(params,key)){if(void 0===params[key])continue;querystring+=encodeURIComponent(key),params[key]!==!0&&(querystring+="="+encodeURIComponent(params[key])),querystring+="&"}return location.protocol+"//"+location.host+location.pathname+querystring.slice(0,-1)}function applyUrlParams(){var selectedModule,modulesList=id("qunit-modulefilter"),filter=id("qunit-filter-input").value;selectedModule=modulesList?decodeURIComponent(modulesList.options[modulesList.selectedIndex].value):void 0,window.location=setUrl({module:""===selectedModule?void 0:selectedModule,filter:""===filter?void 0:filter,testId:void 0})}function toolbarUrlConfigContainer(){var urlConfigContainer=document.createElement("span");return urlConfigContainer.innerHTML=getUrlConfigHtml(),addClass(urlConfigContainer,"qunit-url-config"),addEvents(urlConfigContainer.getElementsByTagName("input"),"click",toolbarChanged),addEvents(urlConfigContainer.getElementsByTagName("select"),"change",toolbarChanged),urlConfigContainer}function toolbarLooseFilter(){var filter=document.createElement("form"),label=document.createElement("label"),input=document.createElement("input"),button=document.createElement("button");return addClass(filter,"qunit-filter"),label.innerHTML="Filter: ",input.type="text",input.value=config.filter||"",input.name="filter",input.id="qunit-filter-input",button.innerHTML="Go",label.appendChild(input),filter.appendChild(label),filter.appendChild(button),addEvent(filter,"submit",function(ev){return applyUrlParams(),ev&&ev.preventDefault&&ev.preventDefault(),!1}),filter}function toolbarModuleFilterHtml(){var i,moduleFilterHtml="";if(!modulesList.length)return!1;for(modulesList.sort(function(a,b){return a.localeCompare(b)}),moduleFilterHtml+="<label for='qunit-modulefilter'>Module: </label><select id='qunit-modulefilter' name='modulefilter'><option value='' "+(void 0===QUnit.urlParams.module?"selected='selected'":"")+">< All Modules ></option>",i=0;i<modulesList.length;i++)moduleFilterHtml+="<option value='"+escapeText(encodeURIComponent(modulesList[i]))+"' "+(QUnit.urlParams.module===modulesList[i]?"selected='selected'":"")+">"+escapeText(modulesList[i])+"</option>";return moduleFilterHtml+="</select>"}function toolbarModuleFilter(){var toolbar=id("qunit-testrunner-toolbar"),moduleFilter=document.createElement("span"),moduleFilterHtml=toolbarModuleFilterHtml();return toolbar&&moduleFilterHtml?(moduleFilter.setAttribute("id","qunit-modulefilter-container"),moduleFilter.innerHTML=moduleFilterHtml,addEvent(moduleFilter.lastChild,"change",applyUrlParams),void toolbar.appendChild(moduleFilter)):!1}function appendToolbar(){var toolbar=id("qunit-testrunner-toolbar");toolbar&&(toolbar.appendChild(toolbarUrlConfigContainer()),toolbar.appendChild(toolbarLooseFilter()))}function appendHeader(){var header=id("qunit-header");header&&(header.innerHTML="<a href='"+setUrl({filter:void 0,module:void 0,testId:void 0})+"'>"+header.innerHTML+"</a> ")}function appendBanner(){var banner=id("qunit-banner");banner&&(banner.className="")}function appendTestResults(){var tests=id("qunit-tests"),result=id("qunit-testresult");result&&result.parentNode.removeChild(result),tests&&(tests.innerHTML="",result=document.createElement("p"),result.id="qunit-testresult",result.className="result",tests.parentNode.insertBefore(result,tests),result.innerHTML="Running...<br />&#160;")}function storeFixture(){var fixture=id("qunit-fixture");fixture&&(config.fixture=fixture.innerHTML)}function appendUserAgent(){var userAgent=id("qunit-userAgent");userAgent&&(userAgent.innerHTML="",userAgent.appendChild(document.createTextNode("QUnit "+QUnit.version+"; "+navigator.userAgent)))}function appendTestsList(modules){var i,l,x,z,test,moduleObj;for(i=0,l=modules.length;l>i;i++)for(moduleObj=modules[i],moduleObj.name&&modulesList.push(moduleObj.name),x=0,z=moduleObj.tests.length;z>x;x++)test=moduleObj.tests[x],appendTest(test.name,test.testId,moduleObj.name)}function appendTest(name,testId,moduleName){var title,rerunTrigger,testBlock,assertList,tests=id("qunit-tests");tests&&(title=document.createElement("strong"),title.innerHTML=getNameHtml(name,moduleName),rerunTrigger=document.createElement("a"),rerunTrigger.innerHTML="Rerun",rerunTrigger.href=setUrl({testId:testId}),testBlock=document.createElement("li"),testBlock.appendChild(title),testBlock.appendChild(rerunTrigger),testBlock.id="qunit-test-output-"+testId,assertList=document.createElement("ol"),assertList.className="qunit-assert-list",testBlock.appendChild(assertList),tests.appendChild(testBlock))}function getNameHtml(name,module){var nameHtml="";return module&&(nameHtml="<span class='module-name'>"+escapeText(module)+"</span>: "),nameHtml+="<span class='test-name'>"+escapeText(name)+"</span>"}if(QUnit.init=function(){var tests,banner,result,qunit,config=QUnit.config;config.stats={all:0,bad:0},config.moduleStats={all:0,bad:0},config.started=0,config.updateRate=1e3,config.blocking=!1,config.autostart=!0,config.autorun=!1,config.filter="",config.queue=[],"undefined"!=typeof window&&(qunit=id("qunit"),qunit&&(qunit.innerHTML="<h1 id='qunit-header'>"+escapeText(document.title)+"</h1><h2 id='qunit-banner'></h2><div id='qunit-testrunner-toolbar'></div><h2 id='qunit-userAgent'></h2><ol id='qunit-tests'></ol>"),tests=id("qunit-tests"),banner=id("qunit-banner"),result=id("qunit-testresult"),tests&&(tests.innerHTML=""),banner&&(banner.className=""),result&&result.parentNode.removeChild(result),tests&&(result=document.createElement("p"),result.id="qunit-testresult",result.className="result",tests.parentNode.insertBefore(result,tests),result.innerHTML="Running...<br />&#160;"))},"undefined"!=typeof window){var config=QUnit.config,hasOwn=Object.prototype.hasOwnProperty,defined={document:void 0!==window.document,sessionStorage:function(){var x="qunit-test-string";try{return sessionStorage.setItem(x,x),sessionStorage.removeItem(x),!0}catch(e){return!1}}()},modulesList=[];QUnit.begin(function(details){var qunit=id("qunit");storeFixture(),qunit&&(qunit.innerHTML="<h1 id='qunit-header'>"+escapeText(document.title)+"</h1><h2 id='qunit-banner'></h2><div id='qunit-testrunner-toolbar'></div><h2 id='qunit-userAgent'></h2><ol id='qunit-tests'></ol>"),appendHeader(),appendBanner(),appendTestResults(),appendUserAgent(),appendToolbar(),appendTestsList(details.modules),toolbarModuleFilter(),qunit&&config.hidepassed&&addClass(qunit.lastChild,"hidepass")}),QUnit.done(function(details){var i,key,banner=id("qunit-banner"),tests=id("qunit-tests"),html=["Tests completed in ",details.runtime," milliseconds.<br />","<span class='passed'>",details.passed,"</span> assertions of <span class='total'>",details.total,"</span> passed, <span class='failed'>",details.failed,"</span> failed."].join("");if(banner&&(banner.className=details.failed?"qunit-fail":"qunit-pass"),tests&&(id("qunit-testresult").innerHTML=html),config.altertitle&&defined.document&&document.title&&(document.title=[details.failed?"✖":"✔",document.title.replace(/^[\u2714\u2716] /i,"")].join(" ")),config.reorder&&defined.sessionStorage&&0===details.failed)for(i=0;i<sessionStorage.length;i++)key=sessionStorage.key(i++),0===key.indexOf("qunit-test-")&&sessionStorage.removeItem(key);config.scrolltop&&window.scrollTo&&window.scrollTo(0,0)}),QUnit.testStart(function(details){var running,testBlock,bad;testBlock=id("qunit-test-output-"+details.testId),testBlock?testBlock.className="running":appendTest(details.name,details.testId,details.module),running=id("qunit-testresult"),running&&(bad=QUnit.config.reorder&&defined.sessionStorage&&+sessionStorage.getItem("qunit-test-"+details.module+"-"+details.name),running.innerHTML=(bad?"Rerunning previously failed test: <br />":"Running: <br />")+getNameHtml(details.name,details.module))}),QUnit.log(function(details){var assertList,assertLi,message,expected,actual,testItem=id("qunit-test-output-"+details.testId);testItem&&(message=escapeText(details.message)||(details.result?"okay":"failed"),message="<span class='test-message'>"+message+"</span>",message+="<span class='runtime'>@ "+details.runtime+" ms</span>",!details.result&&hasOwn.call(details,"expected")?(expected=escapeText(QUnit.dump.parse(details.expected)),actual=escapeText(QUnit.dump.parse(details.actual)),message+="<table><tr class='test-expected'><th>Expected: </th><td><pre>"+expected+"</pre></td></tr>",actual!==expected?message+="<tr class='test-actual'><th>Result: </th><td><pre>"+actual+"</pre></td></tr><tr class='test-diff'><th>Diff: </th><td><pre>"+QUnit.diff(expected,actual)+"</pre></td></tr>":(-1!==expected.indexOf("[object Array]")||-1!==expected.indexOf("[object Object]"))&&(message+="<tr class='test-message'><th>Message: </th><td>Diff suppressed as the depth of object is more than current max depth ("+QUnit.config.maxDepth+").<p>Hint: Use <code>QUnit.dump.maxDepth</code> to  run with a higher max depth or <a href='"+setUrl({maxDepth:-1})+"'>Rerun</a> without max depth.</p></td></tr>"),details.source&&(message+="<tr class='test-source'><th>Source: </th><td><pre>"+escapeText(details.source)+"</pre></td></tr>"),message+="</table>"):!details.result&&details.source&&(message+="<table><tr class='test-source'><th>Source: </th><td><pre>"+escapeText(details.source)+"</pre></td></tr></table>"),assertList=testItem.getElementsByTagName("ol")[0],assertLi=document.createElement("li"),assertLi.className=details.result?"pass":"fail",assertLi.innerHTML=message,assertList.appendChild(assertLi))}),QUnit.testDone(function(details){var testTitle,time,testItem,assertList,good,bad,testCounts,skipped,tests=id("qunit-tests");tests&&(testItem=id("qunit-test-output-"+details.testId),assertList=testItem.getElementsByTagName("ol")[0],good=details.passed,bad=details.failed,config.reorder&&defined.sessionStorage&&(bad?sessionStorage.setItem("qunit-test-"+details.module+"-"+details.name,bad):sessionStorage.removeItem("qunit-test-"+details.module+"-"+details.name)),0===bad&&addClass(assertList,"qunit-collapsed"),testTitle=testItem.firstChild,testCounts=bad?"<b class='failed'>"+bad+"</b>, <b class='passed'>"+good+"</b>, ":"",testTitle.innerHTML+=" <b class='counts'>("+testCounts+details.assertions.length+")</b>",details.skipped?(testItem.className="skipped",skipped=document.createElement("em"),skipped.className="qunit-skipped-label",skipped.innerHTML="skipped",testItem.insertBefore(skipped,testTitle)):(addEvent(testTitle,"click",function(){toggleClass(assertList,"qunit-collapsed")}),testItem.className=bad?"fail":"pass",time=document.createElement("span"),time.className="runtime",time.innerHTML=details.runtime+" ms",testItem.insertBefore(time,assertList)))}),defined.document?"complete"===document.readyState?QUnit.load():addEvent(window,"load",QUnit.load):(config.pageLoaded=!0,config.autorun=!0)}}();